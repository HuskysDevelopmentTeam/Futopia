buildscript{

    repositories {
        jcenter()
        maven { url = "http://files.minecraftforge.net/maven" }
    }
    dependencies {
        classpath 'net.minecraftforge.gradle:ForgeGradle:2.2-SNAPSHOT'
    }
}

repositories {
    maven {
        name "CB's Maven"
        url "http://chickenbones.net/maven"
    }
    maven {
        name "KitsuneAlex' Maven"
        url "http://maven.k-4u.nl"
    }
    maven {
        name 'DVS1 Maven FS'
        url 'http://dvs1.progwml6.com/files/maven'
    }
}

apply plugin: 'net.minecraftforge.gradle.forge'

ext.configFile = file('build.properties')

configFile.withReader {
    def prop = new Properties()
    prop.load(it)
    ext.config = new ConfigSlurper().parse prop
}

version = "${config.mc_version}-${config.major_version}.${config.minor_version}.${config.build_number}"
group= "net.thegaminghuskymc.futopia"
archivesBaseName = config.mod_name


sourceCompatibility = targetCompatibility = "1.8"
compileJava {
    sourceCompatibility = targetCompatibility = "1.8"
}

minecraft {
    version = "1.10.2-12.18.3.2281"
    runDir = "run"
    mappings = "snapshot_20161111"
}

dependencies {
    deobfCompile "codechicken:CodeChickenLib:1.10.2-2.5.8.255:deobf"
    deobfCompile "keri.ninetaillib:NineTailLib-[1.10.2]:0.4.104:deobf"
    deobfCompile "slimeknights.mantle:Mantle:1.10.2-1.1.5.205"
    deobfCompile "slimeknights:TConstruct:1.10.2-2.6.3.501"
}

processResources
{
    inputs.property "version", project.version
    inputs.property "mcversion", project.minecraft.version

    from(sourceSets.main.resources.srcDirs) {
        include 'mcmod.info'
                
        expand 'version':project.version, 'mcversion':project.minecraft.version
    }
        
    from(sourceSets.main.resources.srcDirs) {
        exclude 'mcmod.info'
    }
}

jar {
    classifier = 'universal'
}

task deobfJar(type: Jar) {
    from sourceSets.main.output
    classifier = 'deobf'
}

task srcJar(type: Jar) {
    from sourceSets.main.allSource
    classifier = 'sources'
}

task incrementBuildNumber() {
    dependsOn "reobf"
    doLast {
        config.build_number = (config.build_number.toString().toInteger()) + 1
        configFile.withWriter {
            config.toProperties().store(it, "")
        }
    }
}

artifacts {
    archives deobfJar
    archives srcJar
}
